name: Build and Release

on: [push, pull_request]

env:
  CRATE_NAME: namegen
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1

jobs:
  test:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            build_name: Linux-x86_64-gnu

          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            build_name: Windows-x86_64

          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            build_name: Darwin-x86_64

        toolchain:
          - stable

    env:
      TARBALL: ${{ env.CRATE_NAME }}-${{ matrix.platform.build_name }}.tar.gz
      DO_BUILD: matrix.toolchain == 'stable' && startsWith( github.ref, 'refs/tags/v' )

    steps:
      - uses: actions/checkout@v4

      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2

      - name: Configure Git
        run: |
          git config --global user.email "jdoe@example.com"
          git config --global user.name "J. Doe"

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
          strip: true

      - name: Package as archive
        if: ${{ env.DO_BUILD }}
        shell: bash
        env:
          SAVEPATH: ../../../${{ env.TARBALL }}
        run: |
          cd target/${{ matrix.platform.target }}/release

          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a $SAVEPATH ${{ env.CRATE_NAME }}.exe
          else
            tar czvf $SAVEPATH ${{ env.CRATE_NAME }}
          fi
          cd -

      - name: Publish release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TARBALL }}
          path: "${{ env.CRATE_NAME }}-*"

      - name: Generate SHA-256
        run: shasum -a 256 ${{ env.TARBALL }}
        if: |
          matrix.toolchain == 'stable' &&
          matrix.platform.os == 'macOS-latest' &&
          startsWith( github.ref, 'refs/tags/v' )

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: "${{ env.CRATE_NAME }}-*"
          body_path: Changes.md
        if: ${{ env.DO_BUILD }}
